server {
        root /var/www/ieeeunt.tk/html;
        index index.html index.htm index.nginx-debian.html;

        server_name ieeeunt.tk www.ieeeunt.tk;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}


	# Add reverse proxy for access to $uri/hubs_redirect/
	# to run on port 3000.
	set $upstream localhost:3000;
	location /ntsas21_hubs/get_data/ {
		proxy_pass_header Authorization;
		proxy_pass http://$upstream;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_http_version 1.1;
		proxy_set_header Connection “”;
		proxy_buffering off;
		client_max_body_size 0;
		proxy_read_timeout 36000s;
		proxy_redirect off;
	}


	# Add reverse proxy for access to $uri/hubs_redirect/
	# to run on port 3000.
	set $upstream localhost:3000;
	location /join/ {
		proxy_pass_header Authorization;
		proxy_pass http://$upstream;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_http_version 1.1;
		proxy_set_header Connection “”;
		proxy_buffering off;
		client_max_body_size 0;
		proxy_read_timeout 36000s;
		proxy_redirect off;
	}


	#listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen [::]:443 ssl;
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/ieeeunt.tk/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/ieeeunt.tk/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
	if ($host = ieeeunt.tk) {
	    return 301 https://$host$request_uri;
	} # managed by Certbot


        listen 80;
        listen [::]:80;

        server_name ieeeunt.tk www.ieeeunt.tk;
	return 404; # managed by Certbot


}
